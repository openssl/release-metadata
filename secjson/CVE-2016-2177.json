{
    "containers": {
        "cna": {
            "affected": [
                {
                    "defaultStatus": "unaffected",
                    "product": "OpenSSL",
                    "vendor": "OpenSSL",
                    "versions": [
                        {
                            "lessThan": "1.0.1u",
                            "status": "affected",
                            "version": "1.0.1",
                            "versionType": "custom"
                        },
                        {
                            "lessThan": "1.0.2i",
                            "status": "affected",
                            "version": "1.0.2",
                            "versionType": "custom"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "value": "Guido Vranken"
                }
            ],
            "datePublic": "2016-06-01T00:00:00Z",
            "descriptions": [
                {
                    "lang": "en",
                    "value": "Avoid some undefined pointer arithmetic A common idiom in the codebase is to check limits in the following manner: \"p + len > limit\" Where \"p\" points to some malloc'd data of SIZE bytes and limit == p + SIZE \"len\" here could be from some externally supplied data (e.g. from a TLS message). The rules of C pointer arithmetic are such that \"p + len\" is only well defined where len <= SIZE. Therefore the above idiom is actually undefined behaviour. For example this could cause problems if some malloc implementation provides an address for \"p\" such that \"p + len\" actually overflows for values of len that are too big and therefore p + len < limit."
                }
            ],
            "metrics": [
                {
                    "format": "other",
                    "other": {
                        "content": {
                            "text": "Low"
                        },
                        "type": "https://www.openssl.org/policies/secpolicy.html#low"
                    }
                }
            ],
            "providerMetadata": {
                "orgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6",
                "shortName": "openssl"
            },
            "references": [
                {
                    "name": "OpenSSL Advisory",
                    "tags": [
                        "vendor-advisory"
                    ],
                    "url": "https://www.openssl.org/news/secadv/20160922.txt"
                }
            ],
            "x_generator": {
                "importer": "vulnxml2json5.py 2022-11-04 07:19:07.046385"
            }
        }
    },
    "cveMetadata": {
        "assignerOrgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6",
        "cveId": "CVE-2016-2177",
        "state": "PUBLISHED"
    },
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0"
}