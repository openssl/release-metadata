{
    "containers": {
        "cna": {
            "affected": [
                {
                    "defaultStatus": "unaffected",
                    "product": "OpenSSL",
                    "vendor": "OpenSSL",
                    "versions": [
                        {
                            "lessThan": "3.0.1",
                            "status": "affected",
                            "version": "3.0.0",
                            "versionType": "semver"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "value": "Tobias Nie\u00dfen"
                }
            ],
            "datePublic": "2021-12-14T00:00:00Z",
            "descriptions": [
                {
                    "lang": "en",
                    "value": "Internally libssl in OpenSSL calls X509_verify_cert() on the client side to verify a certificate supplied by a server. That function may return a negative return value to indicate an internal error (for example out of memory). Such a negative return value is mishandled by OpenSSL and will cause an IO function (such as SSL_connect() or SSL_do_handshake()) to not indicate success and a subsequent call to SSL_get_error() to return the value SSL_ERROR_WANT_RETRY_VERIFY. This return value is only supposed to be returned by OpenSSL if the application has previously called SSL_CTX_set_cert_verify_callback(). Since most applications do not do this the SSL_ERROR_WANT_RETRY_VERIFY return value from SSL_get_error() will be totally unexpected and applications may not behave correctly as a result. The exact behaviour will depend on the application but it could result in crashes, infinite loops or other similar incorrect responses. This issue is made more serious in combination with a separate bug in OpenSSL 3.0 that will cause X509_verify_cert() to indicate an internal error when processing a certificate chain. This will occur where a certificate does not include the Subject Alternative Name extension but where a Certificate Authority has enforced name constraints. This issue can occur even with valid chains. By combining the two issues an attacker could induce incorrect, application dependent behaviour."
                }
            ],
            "metrics": [
                {
                    "format": "other",
                    "other": {
                        "content": {
                            "text": "Moderate"
                        },
                        "type": "https://www.openssl.org/policies/secpolicy.html#moderate"
                    }
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "description": "Invalid error handling",
                            "lang": "en"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6",
                "shortName": "openssl"
            },
            "references": [
                {
                    "name": "OpenSSL Advisory",
                    "tags": [
                        "vendor-advisory"
                    ],
                    "url": "https://www.openssl.org/news/secadv/20211214.txt"
                },
                {
                    "name": "3.0.1 git commit",
                    "tags": [
                        "patch"
                    ],
                    "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=758754966791c537ea95241438454aa86f91f256"
                }
            ],
            "title": "Invalid handling of X509_verify_cert() internal errors in libssl",
            "x_generator": {
                "importer": "vulnxml2json5.py 2022-11-04 07:19:07.037659"
            }
        }
    },
    "cveMetadata": {
        "assignerOrgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6",
        "cveId": "CVE-2021-4044",
        "state": "PUBLISHED"
    },
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0"
}